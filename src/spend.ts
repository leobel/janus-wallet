import { Blockfrost, CML, Data, fromText, getAddressDetails, Lucid, Maestro, UTxO } from "@lucid-evolution/lucid";
import { generateSpendScript, getSpendRedeemer, readValidators, getInput, serialiseReferenceInputs, serialiseBody, generateMintPolicy, spendTx, ZKProof, ZkInput } from "./prepare-contracts";
import * as fs from 'fs';
import {} from "@lucid-evolution/lucid/dist/index"


// console.log('Deserialise (Lucid-Evolution)', CML.PlutusData.from_cbor_hex("D8799F9FD8799F5820B8B523B596040BB749B23848EA976EE238D5693DCA8DAA3771E17F3874A9C17E00FFFF9FD8799F58203658CF03AB7407F816548E5A465B6F51779BE54BB45F57155776864E454804AC00FFFF9FD8799FD8799FD8799F581C3DCE7844F36B23B8C3F90AFBA40AA188E7F1D3F6E8ACD1D544ED1DA9FFD87A80FF49A140A1401A0098968040D87A80FFD8799FD8799FD8799F581C3DCE7844F36B23B8C3F90AFBA40AA188E7F1D3F6E8ACD1D544ED1DA9FFD87A80FF49A140A1401A025CE88B40D87A80FFFF41A080FF").to_json());

// console.log('Deserialise (Aiken)', CML.PlutusData.from_cbor_hex('D8799F9FD8799F5820B8B523B596040BB749B23848EA976EE238D5693DCA8DAA3771E17F3874A9C17E00FFFF9FD8799F58203658CF03AB7407F816548E5A465B6F51779BE54BB45F57155776864E454804AC00FFFF9FD8799FD8799FD8799F581C3DCE7844F36B23B8C3F90AFBA40AA188E7F1D3F6E8ACD1D544ED1DA9FFD87A80FF49A140A1401A0098968040D87A80FFD8799FD8799FD8799F581C3DCE7844F36B23B8C3F90AFBA40AA188E7F1D3F6E8ACD1D544ED1DA9FFD87A80FF49A140A1401A025CC80F40D87A80FFFF41A080FF').to_json());

// console.log("TX", CML.Transaction.from_cbor_hex("").to_json());
// console.log("TX", CML.Transaction.from_cbor_hex("").to_json());

// const network = "Preprod";
const network = "Preview";
const lucid = await Lucid(
    new Blockfrost(
        "https://cardano-preview.blockfrost.io/api/v0",
        "preview1OQSKlQ6tb3WYBx9bqlz7kDFhuglmfvL"
        // "https://cardano-preprod.blockfrost.io/api/v0",
        // "preprodNQK7GqWxfMkWg9x5j4bHOVBNNGpjmxQv"
    ),
    network
);
// const lucid = await Lucid(
//     new Maestro({
//         apiKey: "M4tGNWFPzrC35t3HW5LVEkcH8tvO0FkS",
//         network
//     }),
//     network
// );

const prvKey = fs.readFileSync('./src/me.sk').toString();
lucid.selectWallet.fromPrivateKey(prvKey);
// const walletAddress = await lucid.wallet().address();
const walletAddress = "addr_test1qzw567xyzgqchtyddeha90ugsr8uyu7h4uh8wg5su8qz7yykq2ndwcmedv72l7263vj96tl6cyn74l2mw5kp8h7fk8rq66qtae";

const policyId = "b8a5e329b500a66376047165cdfce62c3ecf245fd81d101533f81422";
const lovelace = 10_000_000n;
const tokenName = fromText('Fontus#000');
console.log('Token Name:', tokenName);
const assetUnit = `${policyId}${tokenName}`;

const validators = readValidators();
const { spend, spendAddress } = generateSpendScript(validators.spend.script, network, policyId, tokenName);
console.log('Spend Address:', spendAddress);
// console.log('Spend Script:', spend);

const utxoRef: UTxO = {
    address: "addr_test1vq7uu7zy7d4j8wxrly90hfq25xyw0uwn7m52e5w4gnk3m2gprf2za",
    // address: spendAddress,
    txHash: "d6da036c1aeb7680323258c763a2a6e25be9b280c2a8fedd5e43cb89730fdadf",
    // txHash: "0000000000000000000000000000000000000000000000000000000000000000",
    outputIndex: 0,
    // assets: { lovelace: BigInt(4_219_490), ["b8a5e329b500a66376047165cdfce62c3ecf245fd81d101533f81422466f6e74757323303030"]: BigInt(1) },
    assets: { lovelace: 4_366_030n, [assetUnit]: 1n },
    datum: "d8799f4a466f6e74757323303030582016de4e0412334a7a78664ef6307117e601c9db5213b7ea96a1edf1d1fab543ded8799f5830b18db01619508d589ba45cdcc9c9ab4dbddc33e08bc4dbddea565c10dc743fd66510d3f49c6343999caf540eaa0c4e035f5840845f7a4f6d0fbcaf0648d9c2657f19a33f4e2124c284d68688f209abf54d5a1d1afc47de55c24e662c47f7632a760a8016e8ba01eb4b0d4a2db67fe5abed5ae15820a09e035dbe984a1426e440a4f0038276792f87cdb2bc35dc185a618d352d7f54ff5f584093e02b6052719f607dacd3a088274f65596bd0d09920b61ab5da61bbdc7f5049334cf11213945d57e5ac7d055d042b7e024aa2b2f08f0a91260805272dc510515820c6e47ad4fa403b02b4510b647ae3d1770bac0326a805bbefd48056c8c121bdb8ff5f5840a2341a098a95305955386a3e0e4e2879e6206342b9c9a8da0559190e82f3ed1478158f2ca1ef4db7deab124b7c85b0f403d1a968b4812e6c9c9392d926b86da5582001e23f6c94cffcc62b02393d7807a6f381e40ca49a9b4a2b522518f72927ca15ff9f5830ac2fcd68b85b64e6c3bc11a9dadd1b24e7786738475cf2fe0acdd9b41f773af18ec12601e368d2e920f299f9e6bed4805830a33061a2549ea773d275539b2e92caa6f936404635db1da3199ec71f06faf2cba8effef6860bcb0376259a681ef043c35830a3f6177ea5ef5797249df745be266271bd65a6a1c9c9fae2df3dd2c7e9e6b5751f288fba11950455a9a1f9a054bad8545830a5d227c013957479be181bf43c394a49e8bf14585fd04a4ca72102e3e5ab41661411eeb15986ad3d3a09eb25bb2b7b12583093a152a9cd7d4b81a08989f67fcb958e96b14ef4d3cefd26ad992059df4d252a9f00b5f9f2b5b8a59cf4eca9d78848935830b8cd6daceeaa3b53d707ae2b99dc87e0dbbf58a1e310cff5cd3bea151d90962372de834a519a879c05bc470a016202d65830a6b5d4a12faf84ac46dba1793716cdb14009af64d0edcd5f1c0ca872fa53bc5732da912222fc3d4fc7ea2fc1b9fbff41ffffff"
    // datum
}

const validTo = Date.now() + (1 * 60 * 60 * 1000); // 1 hour


// User Id (could be tokenName directly). All data passed to sc are hex representation 
const userId = BigInt(`0x${tokenName}`).toString(16);
console.log('User Id:', userId);
let txId = "7A1E56DF9B3535DDDC51783D075E3C28EE223310DBAAD0F8E40FBDD38840CE6B";
let hash = BigInt("10343661163184219313272354919635983875711247223011266158462328948931637363678").toString(16)
// let hash = BigInt("30210038655452570927876935731677491109181541264348558594944850742778338046562").toString(16) // pwd 12345
let pA = "82d5d19cf3e90d5440cd30d1814545ef82f6488ebc8976e16a3b52a9b8c3c70bd117f7c44c1f9bc7408e42c9d7004ab4"
let pB = "854c38232bf1d07fa7f7df0653eeb3a6adbbfb7baf014eac007d4b2c3c906f2d217a138634b42c20437e7480f8f973c81871b23c1161a3ca93219c5d39a19631759e2afb3ca78c357dbc2183dc381b852c08876a66f415c03bfa7310dc303a54"
let pC = "90c5e42f844fec0cfb72f574d0074bbdbde23adbbbf67db3e73d04a20a116f9919bab3bf7a0198453fa7d2e8c9379096"

const zkProof: Record<string, ZKProof> = {
    "26d853c70b2a7979988708b791c674854088712e60c8562d6a4252ab88d74928": {
        userId: userId,
        pwdHash: hash,
        pA: "82d5d19cf3e90d5440cd30d1814545ef82f6488ebc8976e16a3b52a9b8c3c70bd117f7c44c1f9bc7408e42c9d7004ab4",
        pB: "854c38232bf1d07fa7f7df0653eeb3a6adbbfb7baf014eac007d4b2c3c906f2d217a138634b42c20437e7480f8f973c81871b23c1161a3ca93219c5d39a19631759e2afb3ca78c357dbc2183dc381b852c08876a66f415c03bfa7310dc303a54",
        pC: "90c5e42f844fec0cfb72f574d0074bbdbde23adbbbf67db3e73d04a20a116f9919bab3bf7a0198453fa7d2e8c9379096"
    },
    "3b95d108630b49168e549c3c5a2899367118d22d2eb866ac778d21f834f5b3bf": {
        userId: userId,
        pwdHash: hash,
        pA: "b84c55ec3f355e6afd010c4a502919a9d18f6a16a10c3a572402aec3cc0c7415b847c622b36bf8bfe2b3efe073dc6355",
        pB: "822002a6cb9660561edf933e64b943128cdc7976aacff95c7d3f82a08821159745dbd9662624c6292ff39bb7d2578f9d05004ea5ca6c18108e30fc5c2373a5986a469f718c8e6eef11cb45538cc8d6880f1f6469a068e663fe6a4152b9d32fd0",
        pC: "affcb0eed30eb5e63af7fe9b7c9f36dc0a601c78bee7f96b07a3ce2064e1f036c53fd485c771b45e47aaea72e3a5a06b"
    },
    "ae03ed5d7b5feef45e2976baac3614bfe9c821a39c0c90599eee7f0e94cc1661": {
        userId: userId,
        pwdHash: hash,
        pA: "84b04a6de4bf4bb01d8b38b321534048f1cb80fdefd582469f60691daea07e03238b6100ad61d8dcc235e69a78b9233f",
        pB: "8421394b96a18642e1ae26785564375a14df6fa5f690a22279fc9c202269982b458a4a9a9d5d1d9a1a1f649ef66a80ad0c5a871ccf188ee28a7a9c71fe588ff55062b38c7cdbf12af33468d4a4bcc2dff94011b8a729c6ada2f9a663bd4e3bb0",
        pC: "8c3b102c7a45b43c3b0bf3c70807436d0ff2f20877f8109b004fcd6e869cf64c6d5418fc741c029af879788bc004c0bb"
    }
}
// let spendRedeemer = getRedeemer(tokenName, hash, txId, pA, pB, pC);

// let aikenProofCbor = "D8799F5830818C07417BE4D158FDC3604892F140DFF244E2161012AA91352114AB94B74BE21CF4F3CF57FAC49CB9AA4985FDD194CD5F5840ADCCA26FDD822728B1F7B63E3C7018D02FEBD9ADA51B546FB221EB0B980344D05452AD38674CA06190A5780F05DD482819CDE2464912C3AA0D847CD708722977582014A19851DDB787FBC041EC1FF09F8CE38B6231327F151B20F364F1304AA0E971FF5830B7551E8D80C741853A16FBB135C86263ADAACE362E76CD5AAF5264CD920B2839A3CE728656A7743E12FA2625E8FEA9CFFF".toLowerCase();

// const proof: Proof = {
//     pA: "818c07417be4d158fdc3604892f140dff244e2161012aa91352114ab94b74be21cf4f3cf57fac49cb9aa4985fdd194cd",
//     pB: "adcca26fdd822728b1f7b63e3c7018d02febd9ada51b546fb221eb0b980344d05452ad38674ca06190a5780f05dd482819cde2464912c3aa0d847cd70872297714a19851ddb787fbc041ec1ff09f8ce38b6231327f151b20f364f1304aa0e971",
//     pC: "b7551e8d80c741853a16fbb135c86263adaace362e76cd5aaf5264cd920b2839a3ce728656a7743e12fa2625e8fea9cf"
// }
// let lucidProof = Data.to(proof, Proof, { canonical: false });
// console.log('Serialise (Lucid):', lucidProof);
// console.log('Serialise (Aiken):', aikenProofCbor);

console.log('Wallet Address', walletAddress);

const utxo: UTxO = {
    address: spendAddress,
    txHash: "70008140f20476fe33cc3a977b3f7a61a08b1e46e994cb6f7179459d0ecb32f0",
    // txHash: "69667b3128ca08d307b29989b976f5cefeddd15b5e3b5517611aaddd1316c6a4",
    outputIndex: 1,
    assets: { lovelace: BigInt(38_593_550) }
}

const zkInput: ZkInput = {
    userId: userId,
    hash: hash,
    pwd: "1234"
    // pwd: "12345"
}

await spendTx(lucid, [utxoRef], [utxo], spendAddress, spend, lovelace, validTo, walletAddress, zkInput, policyId, tokenName, network, { localUPLCEval: true });