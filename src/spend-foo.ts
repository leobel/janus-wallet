import { Blockfrost, Data, Lucid, SpendingValidator, UTxO } from "@lucid-evolution/lucid";
import * as fs from 'fs';

const lucid = await Lucid(
    new Blockfrost(
        "https://cardano-preview.blockfrost.io/api/v0",
        "preview1OQSKlQ6tb3WYBx9bqlz7kDFhuglmfvL"
    ),
    "Preview"
);
const prvKey = fs.readFileSync('./src/me.sk').toString();
lucid.selectWallet.fromPrivateKey(prvKey);
const walletAddress = "addr_test1vq7uu7zy7d4j8wxrly90hfq25xyw0uwn7m52e5w4gnk3m2gprf2za";
console.log('Wallet Address:', walletAddress);


const spend: SpendingValidator = {
    type: "PlutusV3",
    script: "590358590355010100323232323232323225333002323232323253330073370e900118049baa001132323253300b3372c92109747820686173683a200037326664646464646002002444a6664666603200626464646464646601800400266e2922010128000025333016337100069007099b80483c80400c54ccc058cdc4001a410004266e00cdc0241002800690068b299980c800899b8a4881035b5d2900005133714911035b5f2000333300800133714911025d2900005223330090090023006001223330090090020013758602e0046eb4c054004c8cdd81ba83015001374e602c0026ea800c4c94ccc05c0044cdc52441027b7d00003133714911037b5f200032323300100100322533301a00110031533301a301c0011323330090093019001337149101023a2000333009009301a001004301b0011323330090093019001337149101023a2000333009009301a001300633003003301d002301b0013371491102207d000033756006264a66602e002266e29221025b5d00003133714911035b5f2000333300600133714911015d000032233300700700230040012233300700700200137580066e292201022c2000133005375a0040022646466e2922010268270000132333001001337006e3400920013371491101270000322253330153371000490000800899191919980300319b8000548004cdc599b80002533301833710004900a0a40c02903719b8b33700002a66603066e2000520141481805206e0043370c004901019b8300148080cdc70020011bae002222232330010010052253330170011005153330173019001133003301800100513300430180013300200230190012232330010010032253330103370e0029000099b8a488101300000315333010337100029000099b8a489012d003300200233702900000089980299b8400148050cdc599b803370a002900a240c00066002002444a66601a66e2400920001001133300300333708004900a19b8b3370066e14009201448180004c03cc040c040c040c040c040c040c040c040c040c040c040c034dd5003a450016300e300f002300d001300a37540022c60166018004601400260140046010002600a6ea8004526153300349011856616c696461746f722072657475726e65642066616c736500136565734ae7155ceaab9e5573eae855d12ba401"
};

const spendAddress = "addr_test1xpx8w9plfr5t8zusdg8flxs6jgcl5uzhxc7nsy76vg6zz46vwu2r7j8gkw9eq6swn7dp4y33lfc9wd3a8qfa5c35y9tsjkus62";

// let spendRedeemer = Data.to(Data.fromJson({
//     foo: 123
// }));
// let spendRedeemer = "bf43666f6f187bff"; 

let spendRedeemer = Data.to(Data.fromJson({
    foo: 124
}));
// let spendRedeemer = "bf43666f6f187cff"; 

console.log('Redeemer:', spendRedeemer);

const validTo = 1729163464873 + (20 * 60 * 60 * 1000); // 20 hour

const utxo: UTxO = {
    address: spendAddress,
    txHash: "a9d1ab3e1bd3d048a149b596c6270b8aca30cf37bc2024c6de143d04835958a9",
    outputIndex: 0,
    assets: { lovelace: BigInt(5_000_000) }
}

const tx = await lucid
    .newTx()
    .collectFrom([utxo], spendRedeemer)
    // consume script
    .attach.SpendingValidator(spend)
    
    .pay.ToAddress(
        walletAddress, 
        {
            lovelace: BigInt(1_000_000),
        }
    )
    .validTo(validTo)
    .complete();